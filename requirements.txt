- Users should be able to order one or more pizzas
- Requires no user accounts
- Data loaded from an API as menu can change
- Mutiple pizzas can be added to cart before checkout 
- Orders require users name, phone number and adress
- if possible gps location should be provided
- should be able to mark order as priority (20% markup)
- orders made through post request 
- payments made on delivery - no online payment needed
- each order unique id (allows users to search for their order)
- should be able to mark as priority even after order placed

# Feature Categories:
- User 
- Menu 
- Cart 
- Order 

# Necessary Pages
- HomePage (/)
- Menu (/menu)
- Cart (/cart)
- New Order (/order/new)
- Order Lookup (/order/:orderID)

# State domains / slices (normally map to app features)
- User (Global UI)
- Menu (Global Remote)
- Cart (Global UI)
- Order (Global remote)


# Tech 
- routing - React Router
- styling - Tailwindcss
- Remote state management - React Router (reder as you fetch)
- UI state management - Redux

# Professional File Structure Tips
- ultimately up to developer- one way can be done 
- group by features in features folder- hooks, components etc all grouped by feature - co-located  
- reusable UIÂ components in ui/components folder (common components)
- services folder - reusable code for interacting with API
- utils folder - helper functions that can be reused in app, stateless helper functions, no side effects (eg date or number manipulations)
- reusable hooks folder
- reusable contexts folder 
- seperate pages folder